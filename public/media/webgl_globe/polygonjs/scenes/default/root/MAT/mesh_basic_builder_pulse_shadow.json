{
	"type": "meshBasicBuilder",
	"nodes": {
		"globals1": {
			"type": "globals"
		},
		"output1": {
			"type": "output",
			"inputs": [
				null,
				null,
				{
					"index": 2,
					"node": "twoWaySwitch1",
					"output": "val"
				},
				{
					"index": 3,
					"node": "mix1",
					"output": "mix"
				}
			]
		},
		"disk1": {
			"type": "disk",
			"params": {
				"center": [
					0.53,
					0.52
				],
				"radius": 0.18,
				"feather": 0.36
			},
			"inputs": [
				{
					"index": 0,
					"node": "globals1",
					"output": "uv"
				},
				null,
				{
					"index": 2,
					"node": "multAdd3",
					"output": "val"
				},
				{
					"index": 3,
					"node": "multAdd2",
					"output": "val"
				}
			]
		},
		"mix1": {
			"type": "mix",
			"params": {
				"value0": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"value1": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"blend": {
					"type": "float",
					"default_value": 0.5,
					"options": {
						"spare": true
					},
					"raw_input": 0.86
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "max1",
					"output": "val"
				},
				null,
				{
					"index": 2,
					"node": "complement1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value0",
						"type": "float"
					},
					{
						"name": "value1",
						"type": "float"
					},
					{
						"name": "blend",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "mix",
						"type": "float"
					}
				]
			}
		},
		"complement1": {
			"type": "complement",
			"params": {
				"in": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "multAdd4",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"param_baseopacity": {
			"type": "param",
			"params": {
				"name": "baseopacity"
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"constant1": {
			"type": "constant",
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"param_shadowcolor": {
			"type": "param",
			"params": {
				"name": "shadowcolor",
				"type": 4,
				"asColor": 1
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"disk2": {
			"type": "disk",
			"params": {
				"center": [
					0.5,
					0.5
				],
				"radius": 0.26,
				"feather": 0.01
			},
			"inputs": [
				{
					"index": 0,
					"node": "globals1",
					"output": "uv"
				},
				null,
				{
					"index": 2,
					"node": "mult4",
					"output": "product"
				}
			]
		},
		"param_pulsecolor": {
			"type": "param",
			"params": {
				"name": "pulsecolor",
				"type": 4,
				"asColor": 1
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"mult1": {
			"type": "mult",
			"params": {
				"mult0": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult1": {
					"type": "vector3",
					"default_value": [
						1,
						1,
						1
					],
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "disk2",
					"output": "float"
				},
				{
					"index": 1,
					"node": "mix2",
					"output": "mix"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "mult0",
						"type": "float"
					},
					{
						"name": "mult1",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "product",
						"type": "vec3"
					}
				]
			}
		},
		"max1": {
			"type": "max",
			"params": {
				"in0": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"in1": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "disk2",
					"output": "float"
				},
				{
					"index": 1,
					"node": "mult3",
					"output": "product"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in0",
						"type": "float"
					},
					{
						"name": "in1",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"mult2": {
			"type": "mult",
			"params": {
				"mult0": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult1": {
					"type": "vector3",
					"default_value": [
						1,
						1,
						1
					],
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "disk1",
					"output": "float"
				},
				{
					"index": 1,
					"node": "param_shadowcolor",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "mult0",
						"type": "float"
					},
					{
						"name": "mult1",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "product",
						"type": "vec3"
					}
				]
			}
		},
		"max2": {
			"type": "max",
			"params": {
				"in0": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"in1": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "mult1",
					"output": "product"
				},
				{
					"index": 1,
					"node": "mult2",
					"output": "product"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in0",
						"type": "vec3"
					},
					{
						"name": "in1",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"param_radius": {
			"type": "param",
			"params": {
				"name": "radius"
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"mult_add1": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					},
					"raw_input": 1.6
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "mult4",
					"output": "product"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "pre_add",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "post_add",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"mult_add2": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					},
					"raw_input": 0.65
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "mult4",
					"output": "product"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "pre_add",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "post_add",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"param_shadow_intensity": {
			"type": "param",
			"params": {
				"name": "shadowIntensity"
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"mult3": {
			"type": "mult",
			"params": {
				"mult0": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult1": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult2": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult3": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult4": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult5": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult6": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				}
			},
			"maxInputsCount": 7,
			"inputs": [
				{
					"index": 0,
					"node": "disk1",
					"output": "float"
				},
				{
					"index": 1,
					"node": "param_shadow_intensity",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "mult0",
						"type": "float"
					},
					{
						"name": "mult1",
						"type": "float"
					},
					{
						"name": "mult2",
						"type": "float"
					},
					{
						"name": "mult3",
						"type": "float"
					},
					{
						"name": "mult4",
						"type": "float"
					},
					{
						"name": "mult5",
						"type": "float"
					},
					{
						"name": "mult6",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "product",
						"type": "float"
					}
				]
			}
		},
		"mult4": {
			"type": "mult",
			"params": {
				"mult0": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult1": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult2": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult3": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult4": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult5": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult6": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				}
			},
			"maxInputsCount": 7,
			"inputs": [
				{
					"index": 0,
					"node": "param_radius",
					"output": "val"
				},
				{
					"index": 1,
					"node": "constant2",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "mult0",
						"type": "float"
					},
					{
						"name": "mult1",
						"type": "float"
					},
					{
						"name": "mult2",
						"type": "float"
					},
					{
						"name": "mult3",
						"type": "float"
					},
					{
						"name": "mult4",
						"type": "float"
					},
					{
						"name": "mult5",
						"type": "float"
					},
					{
						"name": "mult6",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "product",
						"type": "float"
					}
				]
			}
		},
		"constant2": {
			"type": "constant",
			"params": {
				"float": 0.3
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"attribute1": {
			"type": "attribute",
			"params": {
				"name": "id"
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"param_id": {
			"type": "param",
			"params": {
				"name": "id"
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"round1": {
			"type": "round",
			"params": {
				"in": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "attribute1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"round2": {
			"type": "round",
			"params": {
				"in": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "param_id",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"compare1": {
			"type": "compare",
			"params": {
				"value0": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"value1": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "round1",
					"output": "val"
				},
				{
					"index": 1,
					"node": "round2",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value0",
						"type": "float"
					},
					{
						"name": "value1",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "bool"
					}
				]
			}
		},
		"two_way_switch1": {
			"type": "twoWaySwitch",
			"params": {
				"condition": {
					"type": "boolean",
					"default_value": false,
					"options": {
						"spare": true
					}
				},
				"ifTrue": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					},
					"raw_input": 1
				},
				"ifFalse": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "compare1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "condition",
						"type": "bool"
					},
					{
						"name": "if_true",
						"type": "float"
					},
					{
						"name": "if_false",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"mult5": {
			"type": "mult",
			"params": {
				"mult0": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult1": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult2": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult3": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult4": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult5": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"mult6": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				}
			},
			"maxInputsCount": 7,
			"inputs": [
				{
					"index": 0,
					"node": "complement1",
					"output": "val"
				},
				{
					"index": 1,
					"node": "twoWaySwitch2",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "mult0",
						"type": "float"
					},
					{
						"name": "mult1",
						"type": "float"
					},
					{
						"name": "mult2",
						"type": "float"
					},
					{
						"name": "mult3",
						"type": "float"
					},
					{
						"name": "mult4",
						"type": "float"
					},
					{
						"name": "mult5",
						"type": "float"
					},
					{
						"name": "mult6",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "product",
						"type": "float"
					}
				]
			}
		},
		"mult_add3": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "param_baseopacity",
					"output": "val"
				},
				null,
				{
					"index": 2,
					"node": "twoWaySwitch2",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "pre_add",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "post_add",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"attribute2": {
			"type": "attribute",
			"params": {
				"name": "role"
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"switch1": {
			"type": "switch",
			"params": {
				"index": {
					"type": "integer",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"in0": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"in1": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"in2": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"in3": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"in4": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"in5": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"in6": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"in7": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"in8": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"in9": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"in10": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"maxInputsCount": 12,
			"inputs": [
				{
					"index": 0,
					"node": "float_to_int1",
					"output": "int"
				},
				{
					"index": 1,
					"node": "param_color_role0",
					"output": "val"
				},
				{
					"index": 2,
					"node": "param_color_role1",
					"output": "val"
				},
				{
					"index": 3,
					"node": "param_color_role2",
					"output": "val"
				},
				{
					"index": 4,
					"node": "param_color_role3",
					"output": "val"
				},
				{
					"index": 5,
					"node": "param_color_role4",
					"output": "val"
				},
				{
					"index": 6,
					"node": "param_color_role5",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "index",
						"type": "int"
					},
					{
						"name": "in0",
						"type": "vec3"
					},
					{
						"name": "in1",
						"type": "vec3"
					},
					{
						"name": "in2",
						"type": "vec3"
					},
					{
						"name": "in3",
						"type": "vec3"
					},
					{
						"name": "in4",
						"type": "vec3"
					},
					{
						"name": "in5",
						"type": "vec3"
					},
					{
						"name": "in6",
						"type": "vec3"
					},
					{
						"name": "in7",
						"type": "vec3"
					},
					{
						"name": "in8",
						"type": "vec3"
					},
					{
						"name": "in9",
						"type": "vec3"
					},
					{
						"name": "in10",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"float_to_int1": {
			"type": "floatToInt",
			"inputs": [
				{
					"index": 0,
					"node": "round3",
					"output": "val"
				}
			]
		},
		"param_color_role0": {
			"type": "param",
			"params": {
				"name": "colorRole0",
				"type": 4,
				"asColor": 1
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"param_color_role1": {
			"type": "param",
			"params": {
				"name": "colorRole1",
				"type": 4,
				"asColor": 1
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"param_color_role2": {
			"type": "param",
			"params": {
				"name": "colorRole2",
				"type": 4,
				"asColor": 1
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"param_color_role3": {
			"type": "param",
			"params": {
				"name": "colorRole3",
				"type": 4,
				"asColor": 1
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"param_color_role4": {
			"type": "param",
			"params": {
				"name": "colorRole4",
				"type": 4,
				"asColor": 1
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"param_color_role5": {
			"type": "param",
			"params": {
				"name": "colorRole5",
				"type": 4,
				"asColor": 1
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"round3": {
			"type": "round",
			"params": {
				"in": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "attribute2",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"min1": {
			"type": "min",
			"params": {
				"in0": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"in1": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "mult1",
					"output": "product"
				},
				{
					"index": 1,
					"node": "mult2",
					"output": "product"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in0",
						"type": "vec3"
					},
					{
						"name": "in1",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"compare2": {
			"type": "compare",
			"params": {
				"test": 2,
				"value0": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"value1": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					},
					"raw_input": 0.42
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "disk3",
					"output": "float"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value0",
						"type": "float"
					},
					{
						"name": "value1",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "bool"
					}
				]
			}
		},
		"two_way_switch2": {
			"type": "twoWaySwitch",
			"params": {
				"condition": {
					"type": "boolean",
					"default_value": false,
					"options": {
						"spare": true
					}
				},
				"ifTrue": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"ifFalse": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "compare2",
					"output": "val"
				},
				{
					"index": 1,
					"node": "mult1",
					"output": "product"
				},
				{
					"index": 2,
					"node": "mult2",
					"output": "product"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "condition",
						"type": "bool"
					},
					{
						"name": "if_true",
						"type": "vec3"
					},
					{
						"name": "if_false",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"disk3": {
			"type": "disk",
			"params": {
				"center": [
					0.5,
					0.5
				],
				"radius": 0.17
			},
			"inputs": [
				{
					"index": 0,
					"node": "globals1",
					"output": "uv"
				},
				null,
				{
					"index": 2,
					"node": "mult4",
					"output": "product"
				}
			]
		},
		"hsv_to_rgb1": {
			"type": "hsvToRgb",
			"inputs": [
				{
					"index": 0,
					"node": "float_to_vec3_1",
					"output": "vec3"
				}
			]
		},
		"rgb_to_hsv1": {
			"type": "rgbToHsv",
			"inputs": [
				{
					"index": 0,
					"node": "switch1",
					"output": "val"
				}
			]
		},
		"float_to_vec3_1": {
			"type": "floatToVec3",
			"inputs": [
				{
					"index": 0,
					"node": "vec3_to_float1",
					"output": "x"
				},
				{
					"index": 1,
					"node": "vec3_to_float1",
					"output": "y"
				},
				{
					"index": 2,
					"node": "multAdd1",
					"output": "val"
				}
			]
		},
		"vec3_to_float1": {
			"type": "vec3ToFloat",
			"inputs": [
				{
					"index": 0,
					"node": "rgb_to_hsv1",
					"output": "hsv"
				}
			]
		},
		"mult_add4": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "vec3_to_float1",
					"output": "z"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "pre_add",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "post_add",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"mix2": {
			"type": "mix",
			"params": {
				"value0": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"value1": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"blend": {
					"type": "float",
					"default_value": 0.5,
					"options": {
						"spare": true
					},
					"raw_input": 0.65
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "switch1",
					"output": "val"
				},
				{
					"index": 1,
					"node": "constant_white",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value0",
						"type": "vec3"
					},
					{
						"name": "value1",
						"type": "vec3"
					},
					{
						"name": "blend",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "mix",
						"type": "vec3"
					}
				]
			}
		},
		"constant_white": {
			"type": "constant",
			"params": {
				"type": 4,
				"vec3": [
					1,
					1,
					1
				]
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"multAdd1": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "vec3_to_float1",
					"output": "z"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "preAdd",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "postAdd",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"twoWaySwitch1": {
			"type": "twoWaySwitch",
			"params": {
				"condition": {
					"type": "boolean",
					"default_value": false,
					"options": {
						"spare": true
					}
				},
				"ifTrue": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				},
				"ifFalse": {
					"type": "vector3",
					"default_value": [
						0,
						0,
						0
					],
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "compare2",
					"output": "val"
				},
				{
					"index": 1,
					"node": "mult1",
					"output": "product"
				},
				{
					"index": 2,
					"node": "mult2",
					"output": "product"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "condition",
						"type": "bool"
					},
					{
						"name": "ifTrue",
						"type": "vec3"
					},
					{
						"name": "ifFalse",
						"type": "vec3"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "vec3"
					}
				]
			}
		},
		"multAdd2": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					},
					"raw_input": 1.6
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "mult4",
					"output": "product"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "preAdd",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "postAdd",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"multAdd3": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					},
					"raw_input": 0.65
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "mult4",
					"output": "product"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "preAdd",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "postAdd",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"twoWaySwitch2": {
			"type": "twoWaySwitch",
			"params": {
				"condition": {
					"type": "boolean",
					"default_value": false,
					"options": {
						"spare": true
					}
				},
				"ifTrue": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					},
					"raw_input": 1
				},
				"ifFalse": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "compare1",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "condition",
						"type": "bool"
					},
					{
						"name": "ifTrue",
						"type": "float"
					},
					{
						"name": "ifFalse",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"multAdd4": {
			"type": "multAdd",
			"params": {
				"value": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"preAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"mult": {
					"type": "float",
					"default_value": 1,
					"options": {
						"spare": true
					}
				},
				"postAdd": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "param_baseopacity",
					"output": "val"
				},
				null,
				{
					"index": 2,
					"node": "twoWaySwitch2",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value",
						"type": "float"
					},
					{
						"name": "preAdd",
						"type": "float"
					},
					{
						"name": "mult",
						"type": "float"
					},
					{
						"name": "postAdd",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		}
	},
	"params": {
		"transparent": 1,
		"alphaTest": 0.01,
		"baseopacity": {
			"type": "float",
			"default_value": 0,
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": 0.5
		},
		"shadowcolor": {
			"type": "color",
			"default_value": [
				0,
				0,
				0
			],
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": [
				0.2,
				0.2,
				0.2
			]
		},
		"pulsecolor": {
			"type": "color",
			"default_value": [
				0,
				0,
				0
			],
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": [
				0,
				1,
				0
			]
		},
		"radius": {
			"type": "float",
			"default_value": 0,
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": 0.62
		},
		"shadowIntensity": {
			"type": "float",
			"default_value": 0,
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": 0.24
		},
		"id": {
			"type": "float",
			"default_value": 0,
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			}
		},
		"colorRole0": {
			"type": "color",
			"default_value": [
				0,
				0,
				0
			],
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": [
				0.4,
				0.133,
				0.988
			]
		},
		"colorRole1": {
			"type": "color",
			"default_value": [
				0,
				0,
				0
			],
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": [
				0.89,
				0.254,
				0.356
			]
		},
		"colorRole2": {
			"type": "color",
			"default_value": [
				0,
				0,
				0
			],
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": [
				0,
				0.619,
				0.992
			]
		},
		"colorRole3": {
			"type": "color",
			"default_value": [
				0,
				0,
				0
			],
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": [
				0.996,
				0.454,
				0.298
			]
		},
		"colorRole4": {
			"type": "color",
			"default_value": [
				0,
				0,
				0
			],
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": [
				1,
				0.686,
				0.215
			]
		},
		"colorRole5": {
			"type": "color",
			"default_value": [
				0,
				0,
				0
			],
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": [
				0,
				0.772,
				0.839
			]
		}
	},
	"selection": [
		"param_shadowcolor"
	],
	"persisted_config": {
		"material": {
			"metadata": {
				"version": 4.5,
				"type": "Material",
				"generator": "Material.toJSON"
			},
			"uuid": "342ED38F-7B85-4EBD-8420-3810E19D6F5D",
			"type": "ShaderMaterial",
			"name": "/MAT/mesh_basic_builder_pulse_shadow",
			"transparent": true,
			"depthFunc": 3,
			"depthTest": true,
			"depthWrite": true,
			"stencilWrite": false,
			"stencilWriteMask": 255,
			"stencilFunc": 519,
			"stencilRef": 0,
			"stencilFuncMask": 255,
			"stencilFail": 7680,
			"stencilZFail": 7680,
			"stencilZPass": 7680,
			"alphaTest": 0.01,
			"glslVersion": null,
			"uniforms": {
				"diffuse": {
					"type": "c",
					"value": 15658734
				},
				"opacity": {
					"value": 1
				},
				"map": {
					"value": null
				},
				"uvTransform": {
					"type": "m3",
					"value": [
						1,
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						1
					]
				},
				"uv2Transform": {
					"type": "m3",
					"value": [
						1,
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						1
					]
				},
				"alphaMap": {
					"value": null
				},
				"specularMap": {
					"value": null
				},
				"envMap": {
					"value": null
				},
				"flipEnvMap": {
					"value": -1
				},
				"reflectivity": {
					"value": 1
				},
				"refractionRatio": {
					"value": 0.98
				},
				"maxMipLevel": {
					"value": 0
				},
				"aoMap": {
					"value": null
				},
				"aoMapIntensity": {
					"value": 1
				},
				"lightMap": {
					"value": null
				},
				"lightMapIntensity": {
					"value": 1
				},
				"fogDensity": {
					"value": 0.00025
				},
				"fogNear": {
					"value": 1
				},
				"fogFar": {
					"value": 2000
				},
				"fogColor": {
					"type": "c",
					"value": 16777215
				},
				"v_POLY_param_baseopacity_val": {
					"value": 0.5
				},
				"v_POLY_param_shadowcolor_val": {
					"type": "c",
					"value": 3355443
				},
				"v_POLY_param_pulsecolor_val": {
					"type": "c",
					"value": 65280
				},
				"v_POLY_param_radius_val": {
					"value": 0.62
				},
				"v_POLY_param_shadow_intensity_val": {
					"value": 0.24
				},
				"v_POLY_param_id_val": {
					"value": 0
				},
				"v_POLY_param_color_role0_val": {
					"type": "c",
					"value": 6693371
				},
				"v_POLY_param_color_role1_val": {
					"type": "c",
					"value": 14827610
				},
				"v_POLY_param_color_role2_val": {
					"type": "c",
					"value": 40444
				},
				"v_POLY_param_color_role3_val": {
					"type": "c",
					"value": 16610123
				},
				"v_POLY_param_color_role4_val": {
					"type": "c",
					"value": 16756278
				},
				"v_POLY_param_color_role5_val": {
					"type": "c",
					"value": 50389
				}
			},
			"vertexShader": "\n#include <common>\n\n\n\n// /MAT/mesh_basic_builder_pulse_shadow/globals1\nvarying vec2 v_POLY_globals1_uv;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute2\nvarying float varying_v_POLY_attribute2_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute2\nattribute float role;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute1\nattribute float id;\n\n\n\n\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\n\n\t// /MAT/mesh_basic_builder_pulse_shadow/globals1\n\tv_POLY_globals1_uv = vec2(uv);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute2\n\tvarying_v_POLY_attribute2_val = float(role);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute1\n\tvarying_v_POLY_attribute1_val = float(id);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/output1\n\tvec3 transformed = position;\n\tvec3 objectNormal = normal;\n\n\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n// removed:\n//\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n// removed:\n//\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n}\n",
			"fragmentShader": "\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n\n\n\n// /MAT/mesh_basic_builder_pulse_shadow/disk3\nfloat disk_feather(float dist, float radius, float feather){\n\tif(feather <= 0.0){\n\t\tif(dist < radius){return 1.0;}else{return 0.0;}\n\t} else {\n\t\tfloat half_feather = feather * 0.5;\n\t\tif(dist < (radius - half_feather)){\n\t\t\treturn 1.0;\n\t\t} else {\n\t\t\tif(dist > (radius + half_feather)){\n\t\t\t\treturn 0.0;\n\t\t\t} else {\n\t\t\t\tfloat feather_start = (radius - half_feather);\n\t\t\t\tfloat blend = 1.0 - (dist - feather_start) / feather;\n\t\t\t\treturn blend;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfloat disk2d(vec2 pos, vec2 center, float radius, float feather){\n\tfloat dist = distance(pos, center);\n\treturn disk_feather(dist, radius, feather);\n}\n\n// function could be called sphere, but is an overload of disk, and is the same\nfloat disk3d(vec3 pos, vec3 center, float radius, float feather){\n\tfloat dist = distance(pos, center);\n\treturn disk_feather(dist, radius, feather);\n}\n\n// /MAT/mesh_basic_builder_pulse_shadow/complement1\nfloat complement(float x){return 1.0-x;}\nvec2 complement(vec2 x){return vec2(1.0-x.x, 1.0-x.y);}\nvec3 complement(vec3 x){return vec3(1.0-x.x, 1.0-x.y, 1.0-x.z);}\nvec4 complement(vec4 x){return vec4(1.0-x.x, 1.0-x.y, 1.0-x.z, 1.0-x.w);}\n\n\n\n\n\n\n\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_radius\nuniform float v_POLY_param_radius_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role0\nuniform vec3 v_POLY_param_color_role0_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role1\nuniform vec3 v_POLY_param_color_role1_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role2\nuniform vec3 v_POLY_param_color_role2_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role3\nuniform vec3 v_POLY_param_color_role3_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role4\nuniform vec3 v_POLY_param_color_role4_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role5\nuniform vec3 v_POLY_param_color_role5_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_shadowcolor\nuniform vec3 v_POLY_param_shadowcolor_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_shadow_intensity\nuniform float v_POLY_param_shadow_intensity_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_baseopacity\nuniform float v_POLY_param_baseopacity_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_id\nuniform float v_POLY_param_id_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/globals1\nvarying vec2 v_POLY_globals1_uv;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute2\nvarying float varying_v_POLY_attribute2_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n\n\n\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\n\n\t// /MAT/mesh_basic_builder_pulse_shadow/constant2\n\tfloat v_POLY_constant2_val = 0.3;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute2\n\tfloat v_POLY_attribute2_val = varying_v_POLY_attribute2_val;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/constant_white\n\tvec3 v_POLY_constant_white_val = vec3(1.0, 1.0, 1.0);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute1\n\tfloat v_POLY_attribute1_val = varying_v_POLY_attribute1_val;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mult4\n\tfloat v_POLY_mult4_product = (v_POLY_param_radius_val * v_POLY_constant2_val * 1.0 * 1.0 * 1.0 * 1.0 * 1.0);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/round3\n\tfloat v_POLY_round3_val = sign(v_POLY_attribute2_val)*floor(abs(v_POLY_attribute2_val)+0.5);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/round1\n\tfloat v_POLY_round1_val = sign(v_POLY_attribute1_val)*floor(abs(v_POLY_attribute1_val)+0.5);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/round2\n\tfloat v_POLY_round2_val = sign(v_POLY_param_id_val)*floor(abs(v_POLY_param_id_val)+0.5);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/disk3\n\tfloat v_POLY_disk3_float = disk2d(v_POLY_globals1_uv, vec2(0.5, 0.5), v_POLY_mult4_product, 0.1);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/disk2\n\tfloat v_POLY_disk2_float = disk2d(v_POLY_globals1_uv, vec2(0.5, 0.5), v_POLY_mult4_product, 0.01);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/multAdd3\n\tfloat v_POLY_multAdd3_val = (0.65*(v_POLY_mult4_product + 0.0)) + 0.0;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/multAdd2\n\tfloat v_POLY_multAdd2_val = (1.6*(v_POLY_mult4_product + 0.0)) + 0.0;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/float_to_int1\n\tint v_POLY_float_to_int1_int = int(v_POLY_round3_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/compare1\n\tbool v_POLY_compare1_val = (v_POLY_round1_val == v_POLY_round2_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/compare2\n\tbool v_POLY_compare2_val = (v_POLY_disk3_float > 0.42);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/disk1\n\tfloat v_POLY_disk1_float = disk2d(v_POLY_globals1_uv, vec2(0.53, 0.52), v_POLY_multAdd3_val, v_POLY_multAdd2_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/switch1\n\tvec3 v_POLY_switch1_val;\n\tint v_POLY_switch1_index = v_POLY_float_to_int1_int;\n\tif(v_POLY_switch1_index == 0){v_POLY_switch1_val = v_POLY_param_color_role0_val;}\n\telse if(v_POLY_switch1_index == 1){v_POLY_switch1_val = v_POLY_param_color_role1_val;}\n\telse if(v_POLY_switch1_index == 2){v_POLY_switch1_val = v_POLY_param_color_role2_val;}\n\telse if(v_POLY_switch1_index == 3){v_POLY_switch1_val = v_POLY_param_color_role3_val;}\n\telse if(v_POLY_switch1_index == 4){v_POLY_switch1_val = v_POLY_param_color_role4_val;}\n\telse if(v_POLY_switch1_index == 5){v_POLY_switch1_val = v_POLY_param_color_role5_val;}\n\telse if(v_POLY_switch1_index == 6){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\telse if(v_POLY_switch1_index == 7){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\telse if(v_POLY_switch1_index == 8){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\telse if(v_POLY_switch1_index == 9){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\telse if(v_POLY_switch1_index == 10){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/twoWaySwitch2\n\tfloat v_POLY_twoWaySwitch2_val;\n\tif(v_POLY_compare1_val){\n\tv_POLY_twoWaySwitch2_val = 1.0;\n\t} else {\n\tv_POLY_twoWaySwitch2_val = 0.0;\n\t}\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mult2\n\tvec3 v_POLY_mult2_product = (v_POLY_disk1_float * v_POLY_param_shadowcolor_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mult3\n\tfloat v_POLY_mult3_product = (v_POLY_disk1_float * v_POLY_param_shadow_intensity_val * 1.0 * 1.0 * 1.0 * 1.0 * 1.0);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mix2\n\tvec3 v_POLY_mix2_mix = mix(v_POLY_switch1_val, v_POLY_constant_white_val, 0.65);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/multAdd4\n\tfloat v_POLY_multAdd4_val = (v_POLY_twoWaySwitch2_val*(v_POLY_param_baseopacity_val + 0.0)) + 0.0;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mult1\n\tvec3 v_POLY_mult1_product = (v_POLY_disk2_float * v_POLY_mix2_mix);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/max1\n\tfloat v_POLY_max1_val = max(v_POLY_disk2_float, v_POLY_mult3_product);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/complement1\n\tfloat v_POLY_complement1_val = complement(v_POLY_multAdd4_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/twoWaySwitch1\n\tvec3 v_POLY_twoWaySwitch1_val;\n\tif(v_POLY_compare2_val){\n\tv_POLY_twoWaySwitch1_val = v_POLY_mult1_product;\n\t} else {\n\tv_POLY_twoWaySwitch1_val = v_POLY_mult2_product;\n\t}\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mix1\n\tfloat v_POLY_mix1_mix = mix(v_POLY_max1_val, 0.0, v_POLY_complement1_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/output1\n\tdiffuseColor.xyz = v_POLY_twoWaySwitch1_val;\n\tdiffuseColor.a = v_POLY_mix1_mix;\n\n\n\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",
			"lights": false
		},
		"uniforms_time_dependent": false,
		"uniforms_resolution_dependent": false,
		"param_uniform_pairs": [
			[
				"baseopacity",
				"v_POLY_param_baseopacity_val"
			],
			[
				"shadowcolor",
				"v_POLY_param_shadowcolor_val"
			],
			[
				"pulsecolor",
				"v_POLY_param_pulsecolor_val"
			],
			[
				"radius",
				"v_POLY_param_radius_val"
			],
			[
				"shadowIntensity",
				"v_POLY_param_shadow_intensity_val"
			],
			[
				"id",
				"v_POLY_param_id_val"
			],
			[
				"colorRole0",
				"v_POLY_param_color_role0_val"
			],
			[
				"colorRole1",
				"v_POLY_param_color_role1_val"
			],
			[
				"colorRole2",
				"v_POLY_param_color_role2_val"
			],
			[
				"colorRole3",
				"v_POLY_param_color_role3_val"
			],
			[
				"colorRole4",
				"v_POLY_param_color_role4_val"
			],
			[
				"colorRole5",
				"v_POLY_param_color_role5_val"
			]
		],
		"custom_materials": {
			"customDistanceMaterial": {
				"metadata": {
					"version": 4.5,
					"type": "Material",
					"generator": "Material.toJSON"
				},
				"uuid": "D552A427-D889-4696-A612-6AE2C9991291",
				"type": "ShaderMaterial",
				"depthFunc": 3,
				"depthTest": true,
				"depthWrite": true,
				"stencilWrite": false,
				"stencilWriteMask": 255,
				"stencilFunc": 519,
				"stencilRef": 0,
				"stencilFuncMask": 255,
				"stencilFail": 7680,
				"stencilZFail": 7680,
				"stencilZPass": 7680,
				"glslVersion": null,
				"uniforms": {
					"diffuse": {
						"type": "c",
						"value": 15658734
					},
					"opacity": {
						"value": 1
					},
					"map": {
						"value": null
					},
					"uvTransform": {
						"type": "m3",
						"value": [
							1,
							0,
							0,
							0,
							1,
							0,
							0,
							0,
							1
						]
					},
					"uv2Transform": {
						"type": "m3",
						"value": [
							1,
							0,
							0,
							0,
							1,
							0,
							0,
							0,
							1
						]
					},
					"alphaMap": {
						"value": null
					},
					"displacementMap": {
						"value": null
					},
					"displacementScale": {
						"value": 1
					},
					"displacementBias": {
						"value": 0
					},
					"referencePosition": {
						"type": "v3",
						"value": [
							0,
							0,
							0
						]
					},
					"nearDistance": {
						"value": 1
					},
					"farDistance": {
						"value": 1000
					},
					"v_POLY_param_baseopacity_val": {
						"value": 0.5
					},
					"v_POLY_param_shadowcolor_val": {
						"type": "c",
						"value": 3355443
					},
					"v_POLY_param_pulsecolor_val": {
						"type": "c",
						"value": 65280
					},
					"v_POLY_param_radius_val": {
						"value": 0.62
					},
					"v_POLY_param_shadow_intensity_val": {
						"value": 0.24
					},
					"v_POLY_param_id_val": {
						"value": 0
					},
					"v_POLY_param_color_role0_val": {
						"type": "c",
						"value": 6693371
					},
					"v_POLY_param_color_role1_val": {
						"type": "c",
						"value": 14827610
					},
					"v_POLY_param_color_role2_val": {
						"type": "c",
						"value": 40444
					},
					"v_POLY_param_color_role3_val": {
						"type": "c",
						"value": 16610123
					},
					"v_POLY_param_color_role4_val": {
						"type": "c",
						"value": 16756278
					},
					"v_POLY_param_color_role5_val": {
						"type": "c",
						"value": 50389
					}
				},
				"defines": {
					"DEPTH_PACKING": 3201
				},
				"vertexShader": "\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n\n\n\n// /MAT/mesh_basic_builder_pulse_shadow/globals1\nvarying vec2 v_POLY_globals1_uv;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute2\nvarying float varying_v_POLY_attribute2_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute2\nattribute float role;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute1\nattribute float id;\n\n\n\n\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n// removed:\n//\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n// removed:\n//\t#include <begin_vertex>\n\n\n\n\t// /MAT/mesh_basic_builder_pulse_shadow/globals1\n\tv_POLY_globals1_uv = vec2(uv);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute2\n\tvarying_v_POLY_attribute2_val = float(role);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute1\n\tvarying_v_POLY_attribute1_val = float(id);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/output1\n\tvec3 transformed = position;\n\tvec3 objectNormal = normal;\n\n\n\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition.xyz;\n\n}\n",
				"fragmentShader": "\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n\n\n\n// /MAT/mesh_basic_builder_pulse_shadow/disk3\nfloat disk_feather(float dist, float radius, float feather){\n\tif(feather <= 0.0){\n\t\tif(dist < radius){return 1.0;}else{return 0.0;}\n\t} else {\n\t\tfloat half_feather = feather * 0.5;\n\t\tif(dist < (radius - half_feather)){\n\t\t\treturn 1.0;\n\t\t} else {\n\t\t\tif(dist > (radius + half_feather)){\n\t\t\t\treturn 0.0;\n\t\t\t} else {\n\t\t\t\tfloat feather_start = (radius - half_feather);\n\t\t\t\tfloat blend = 1.0 - (dist - feather_start) / feather;\n\t\t\t\treturn blend;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfloat disk2d(vec2 pos, vec2 center, float radius, float feather){\n\tfloat dist = distance(pos, center);\n\treturn disk_feather(dist, radius, feather);\n}\n\n// function could be called sphere, but is an overload of disk, and is the same\nfloat disk3d(vec3 pos, vec3 center, float radius, float feather){\n\tfloat dist = distance(pos, center);\n\treturn disk_feather(dist, radius, feather);\n}\n\n// /MAT/mesh_basic_builder_pulse_shadow/complement1\nfloat complement(float x){return 1.0-x;}\nvec2 complement(vec2 x){return vec2(1.0-x.x, 1.0-x.y);}\nvec3 complement(vec3 x){return vec3(1.0-x.x, 1.0-x.y, 1.0-x.z);}\nvec4 complement(vec4 x){return vec4(1.0-x.x, 1.0-x.y, 1.0-x.z, 1.0-x.w);}\n\n\n\n\n\n\n\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_radius\nuniform float v_POLY_param_radius_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role0\nuniform vec3 v_POLY_param_color_role0_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role1\nuniform vec3 v_POLY_param_color_role1_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role2\nuniform vec3 v_POLY_param_color_role2_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role3\nuniform vec3 v_POLY_param_color_role3_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role4\nuniform vec3 v_POLY_param_color_role4_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role5\nuniform vec3 v_POLY_param_color_role5_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_shadowcolor\nuniform vec3 v_POLY_param_shadowcolor_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_shadow_intensity\nuniform float v_POLY_param_shadow_intensity_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_baseopacity\nuniform float v_POLY_param_baseopacity_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_id\nuniform float v_POLY_param_id_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/globals1\nvarying vec2 v_POLY_globals1_uv;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute2\nvarying float varying_v_POLY_attribute2_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n\n\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\n\n\t// /MAT/mesh_basic_builder_pulse_shadow/constant2\n\tfloat v_POLY_constant2_val = 0.3;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute2\n\tfloat v_POLY_attribute2_val = varying_v_POLY_attribute2_val;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/constant_white\n\tvec3 v_POLY_constant_white_val = vec3(1.0, 1.0, 1.0);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute1\n\tfloat v_POLY_attribute1_val = varying_v_POLY_attribute1_val;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mult4\n\tfloat v_POLY_mult4_product = (v_POLY_param_radius_val * v_POLY_constant2_val * 1.0 * 1.0 * 1.0 * 1.0 * 1.0);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/round3\n\tfloat v_POLY_round3_val = sign(v_POLY_attribute2_val)*floor(abs(v_POLY_attribute2_val)+0.5);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/round1\n\tfloat v_POLY_round1_val = sign(v_POLY_attribute1_val)*floor(abs(v_POLY_attribute1_val)+0.5);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/round2\n\tfloat v_POLY_round2_val = sign(v_POLY_param_id_val)*floor(abs(v_POLY_param_id_val)+0.5);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/disk3\n\tfloat v_POLY_disk3_float = disk2d(v_POLY_globals1_uv, vec2(0.5, 0.5), v_POLY_mult4_product, 0.1);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/disk2\n\tfloat v_POLY_disk2_float = disk2d(v_POLY_globals1_uv, vec2(0.5, 0.5), v_POLY_mult4_product, 0.01);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/multAdd3\n\tfloat v_POLY_multAdd3_val = (0.65*(v_POLY_mult4_product + 0.0)) + 0.0;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/multAdd2\n\tfloat v_POLY_multAdd2_val = (1.6*(v_POLY_mult4_product + 0.0)) + 0.0;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/float_to_int1\n\tint v_POLY_float_to_int1_int = int(v_POLY_round3_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/compare1\n\tbool v_POLY_compare1_val = (v_POLY_round1_val == v_POLY_round2_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/compare2\n\tbool v_POLY_compare2_val = (v_POLY_disk3_float > 0.42);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/disk1\n\tfloat v_POLY_disk1_float = disk2d(v_POLY_globals1_uv, vec2(0.53, 0.52), v_POLY_multAdd3_val, v_POLY_multAdd2_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/switch1\n\tvec3 v_POLY_switch1_val;\n\tint v_POLY_switch1_index = v_POLY_float_to_int1_int;\n\tif(v_POLY_switch1_index == 0){v_POLY_switch1_val = v_POLY_param_color_role0_val;}\n\telse if(v_POLY_switch1_index == 1){v_POLY_switch1_val = v_POLY_param_color_role1_val;}\n\telse if(v_POLY_switch1_index == 2){v_POLY_switch1_val = v_POLY_param_color_role2_val;}\n\telse if(v_POLY_switch1_index == 3){v_POLY_switch1_val = v_POLY_param_color_role3_val;}\n\telse if(v_POLY_switch1_index == 4){v_POLY_switch1_val = v_POLY_param_color_role4_val;}\n\telse if(v_POLY_switch1_index == 5){v_POLY_switch1_val = v_POLY_param_color_role5_val;}\n\telse if(v_POLY_switch1_index == 6){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\telse if(v_POLY_switch1_index == 7){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\telse if(v_POLY_switch1_index == 8){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\telse if(v_POLY_switch1_index == 9){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\telse if(v_POLY_switch1_index == 10){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/twoWaySwitch2\n\tfloat v_POLY_twoWaySwitch2_val;\n\tif(v_POLY_compare1_val){\n\tv_POLY_twoWaySwitch2_val = 1.0;\n\t} else {\n\tv_POLY_twoWaySwitch2_val = 0.0;\n\t}\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mult2\n\tvec3 v_POLY_mult2_product = (v_POLY_disk1_float * v_POLY_param_shadowcolor_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mult3\n\tfloat v_POLY_mult3_product = (v_POLY_disk1_float * v_POLY_param_shadow_intensity_val * 1.0 * 1.0 * 1.0 * 1.0 * 1.0);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mix2\n\tvec3 v_POLY_mix2_mix = mix(v_POLY_switch1_val, v_POLY_constant_white_val, 0.65);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/multAdd4\n\tfloat v_POLY_multAdd4_val = (v_POLY_twoWaySwitch2_val*(v_POLY_param_baseopacity_val + 0.0)) + 0.0;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mult1\n\tvec3 v_POLY_mult1_product = (v_POLY_disk2_float * v_POLY_mix2_mix);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/max1\n\tfloat v_POLY_max1_val = max(v_POLY_disk2_float, v_POLY_mult3_product);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/complement1\n\tfloat v_POLY_complement1_val = complement(v_POLY_multAdd4_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/twoWaySwitch1\n\tvec3 v_POLY_twoWaySwitch1_val;\n\tif(v_POLY_compare2_val){\n\tv_POLY_twoWaySwitch1_val = v_POLY_mult1_product;\n\t} else {\n\tv_POLY_twoWaySwitch1_val = v_POLY_mult2_product;\n\t}\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mix1\n\tfloat v_POLY_mix1_mix = mix(v_POLY_max1_val, 0.0, v_POLY_complement1_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/output1\n\tdiffuseColor.xyz = v_POLY_twoWaySwitch1_val;\n\tdiffuseColor.a = v_POLY_mix1_mix;\n\n\n\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n",
				"lights": false
			},
			"customDepthMaterial": {
				"metadata": {
					"version": 4.5,
					"type": "Material",
					"generator": "Material.toJSON"
				},
				"uuid": "753596C9-998A-4115-B015-5844A36E7D00",
				"type": "ShaderMaterial",
				"side": 1,
				"depthFunc": 3,
				"depthTest": true,
				"depthWrite": true,
				"stencilWrite": false,
				"stencilWriteMask": 255,
				"stencilFunc": 519,
				"stencilRef": 0,
				"stencilFuncMask": 255,
				"stencilFail": 7680,
				"stencilZFail": 7680,
				"stencilZPass": 7680,
				"glslVersion": null,
				"uniforms": {
					"diffuse": {
						"type": "c",
						"value": 15658734
					},
					"opacity": {
						"value": 1
					},
					"map": {
						"value": null
					},
					"uvTransform": {
						"type": "m3",
						"value": [
							1,
							0,
							0,
							0,
							1,
							0,
							0,
							0,
							1
						]
					},
					"uv2Transform": {
						"type": "m3",
						"value": [
							1,
							0,
							0,
							0,
							1,
							0,
							0,
							0,
							1
						]
					},
					"alphaMap": {
						"value": null
					},
					"displacementMap": {
						"value": null
					},
					"displacementScale": {
						"value": 1
					},
					"displacementBias": {
						"value": 0
					},
					"v_POLY_param_baseopacity_val": {
						"value": 0.5
					},
					"v_POLY_param_shadowcolor_val": {
						"type": "c",
						"value": 3355443
					},
					"v_POLY_param_pulsecolor_val": {
						"type": "c",
						"value": 65280
					},
					"v_POLY_param_radius_val": {
						"value": 0.62
					},
					"v_POLY_param_shadow_intensity_val": {
						"value": 0.24
					},
					"v_POLY_param_id_val": {
						"value": 0
					},
					"v_POLY_param_color_role0_val": {
						"type": "c",
						"value": 6693371
					},
					"v_POLY_param_color_role1_val": {
						"type": "c",
						"value": 14827610
					},
					"v_POLY_param_color_role2_val": {
						"type": "c",
						"value": 40444
					},
					"v_POLY_param_color_role3_val": {
						"type": "c",
						"value": 16610123
					},
					"v_POLY_param_color_role4_val": {
						"type": "c",
						"value": 16756278
					},
					"v_POLY_param_color_role5_val": {
						"type": "c",
						"value": 50389
					}
				},
				"defines": {
					"DEPTH_PACKING": 3201
				},
				"vertexShader": "\n#include <common>\n\n\n\n// /MAT/mesh_basic_builder_pulse_shadow/globals1\nvarying vec2 v_POLY_globals1_uv;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute2\nvarying float varying_v_POLY_attribute2_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute2\nattribute float role;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute1\nattribute float id;\n\n\n\n\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// This is used for computing an equivalent of gl_FragCoord.z that is as high precision as possible.\n// Some platforms compute gl_FragCoord at a lower precision which makes the manually computed value better for\n// depth-based postprocessing effects. Reproduced on iPad with A10 processor / iPadOS 13.3.1.\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n// removed:\n//\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n// removed:\n//\t#include <begin_vertex>\n\n\n\n\t// /MAT/mesh_basic_builder_pulse_shadow/globals1\n\tv_POLY_globals1_uv = vec2(uv);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute2\n\tvarying_v_POLY_attribute2_val = float(role);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute1\n\tvarying_v_POLY_attribute1_val = float(id);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/output1\n\tvec3 transformed = position;\n\tvec3 objectNormal = normal;\n\n\n\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvHighPrecisionZW = gl_Position.zw;\n\n}\n",
				"fragmentShader": "\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n\n\n\n// /MAT/mesh_basic_builder_pulse_shadow/disk3\nfloat disk_feather(float dist, float radius, float feather){\n\tif(feather <= 0.0){\n\t\tif(dist < radius){return 1.0;}else{return 0.0;}\n\t} else {\n\t\tfloat half_feather = feather * 0.5;\n\t\tif(dist < (radius - half_feather)){\n\t\t\treturn 1.0;\n\t\t} else {\n\t\t\tif(dist > (radius + half_feather)){\n\t\t\t\treturn 0.0;\n\t\t\t} else {\n\t\t\t\tfloat feather_start = (radius - half_feather);\n\t\t\t\tfloat blend = 1.0 - (dist - feather_start) / feather;\n\t\t\t\treturn blend;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfloat disk2d(vec2 pos, vec2 center, float radius, float feather){\n\tfloat dist = distance(pos, center);\n\treturn disk_feather(dist, radius, feather);\n}\n\n// function could be called sphere, but is an overload of disk, and is the same\nfloat disk3d(vec3 pos, vec3 center, float radius, float feather){\n\tfloat dist = distance(pos, center);\n\treturn disk_feather(dist, radius, feather);\n}\n\n// /MAT/mesh_basic_builder_pulse_shadow/complement1\nfloat complement(float x){return 1.0-x;}\nvec2 complement(vec2 x){return vec2(1.0-x.x, 1.0-x.y);}\nvec3 complement(vec3 x){return vec3(1.0-x.x, 1.0-x.y, 1.0-x.z);}\nvec4 complement(vec4 x){return vec4(1.0-x.x, 1.0-x.y, 1.0-x.z, 1.0-x.w);}\n\n\n\n\n\n\n\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_radius\nuniform float v_POLY_param_radius_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role0\nuniform vec3 v_POLY_param_color_role0_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role1\nuniform vec3 v_POLY_param_color_role1_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role2\nuniform vec3 v_POLY_param_color_role2_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role3\nuniform vec3 v_POLY_param_color_role3_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role4\nuniform vec3 v_POLY_param_color_role4_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_color_role5\nuniform vec3 v_POLY_param_color_role5_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_shadowcolor\nuniform vec3 v_POLY_param_shadowcolor_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_shadow_intensity\nuniform float v_POLY_param_shadow_intensity_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_baseopacity\nuniform float v_POLY_param_baseopacity_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/param_id\nuniform float v_POLY_param_id_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/globals1\nvarying vec2 v_POLY_globals1_uv;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute2\nvarying float varying_v_POLY_attribute2_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n\n\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\n\n\t// /MAT/mesh_basic_builder_pulse_shadow/constant2\n\tfloat v_POLY_constant2_val = 0.3;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute2\n\tfloat v_POLY_attribute2_val = varying_v_POLY_attribute2_val;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/constant_white\n\tvec3 v_POLY_constant_white_val = vec3(1.0, 1.0, 1.0);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute1\n\tfloat v_POLY_attribute1_val = varying_v_POLY_attribute1_val;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mult4\n\tfloat v_POLY_mult4_product = (v_POLY_param_radius_val * v_POLY_constant2_val * 1.0 * 1.0 * 1.0 * 1.0 * 1.0);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/round3\n\tfloat v_POLY_round3_val = sign(v_POLY_attribute2_val)*floor(abs(v_POLY_attribute2_val)+0.5);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/round1\n\tfloat v_POLY_round1_val = sign(v_POLY_attribute1_val)*floor(abs(v_POLY_attribute1_val)+0.5);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/round2\n\tfloat v_POLY_round2_val = sign(v_POLY_param_id_val)*floor(abs(v_POLY_param_id_val)+0.5);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/disk3\n\tfloat v_POLY_disk3_float = disk2d(v_POLY_globals1_uv, vec2(0.5, 0.5), v_POLY_mult4_product, 0.1);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/disk2\n\tfloat v_POLY_disk2_float = disk2d(v_POLY_globals1_uv, vec2(0.5, 0.5), v_POLY_mult4_product, 0.01);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/multAdd3\n\tfloat v_POLY_multAdd3_val = (0.65*(v_POLY_mult4_product + 0.0)) + 0.0;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/multAdd2\n\tfloat v_POLY_multAdd2_val = (1.6*(v_POLY_mult4_product + 0.0)) + 0.0;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/float_to_int1\n\tint v_POLY_float_to_int1_int = int(v_POLY_round3_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/compare1\n\tbool v_POLY_compare1_val = (v_POLY_round1_val == v_POLY_round2_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/compare2\n\tbool v_POLY_compare2_val = (v_POLY_disk3_float > 0.42);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/disk1\n\tfloat v_POLY_disk1_float = disk2d(v_POLY_globals1_uv, vec2(0.53, 0.52), v_POLY_multAdd3_val, v_POLY_multAdd2_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/switch1\n\tvec3 v_POLY_switch1_val;\n\tint v_POLY_switch1_index = v_POLY_float_to_int1_int;\n\tif(v_POLY_switch1_index == 0){v_POLY_switch1_val = v_POLY_param_color_role0_val;}\n\telse if(v_POLY_switch1_index == 1){v_POLY_switch1_val = v_POLY_param_color_role1_val;}\n\telse if(v_POLY_switch1_index == 2){v_POLY_switch1_val = v_POLY_param_color_role2_val;}\n\telse if(v_POLY_switch1_index == 3){v_POLY_switch1_val = v_POLY_param_color_role3_val;}\n\telse if(v_POLY_switch1_index == 4){v_POLY_switch1_val = v_POLY_param_color_role4_val;}\n\telse if(v_POLY_switch1_index == 5){v_POLY_switch1_val = v_POLY_param_color_role5_val;}\n\telse if(v_POLY_switch1_index == 6){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\telse if(v_POLY_switch1_index == 7){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\telse if(v_POLY_switch1_index == 8){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\telse if(v_POLY_switch1_index == 9){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\telse if(v_POLY_switch1_index == 10){v_POLY_switch1_val = vec3(0.0, 0.0, 0.0);}\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/twoWaySwitch2\n\tfloat v_POLY_twoWaySwitch2_val;\n\tif(v_POLY_compare1_val){\n\tv_POLY_twoWaySwitch2_val = 1.0;\n\t} else {\n\tv_POLY_twoWaySwitch2_val = 0.0;\n\t}\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mult2\n\tvec3 v_POLY_mult2_product = (v_POLY_disk1_float * v_POLY_param_shadowcolor_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mult3\n\tfloat v_POLY_mult3_product = (v_POLY_disk1_float * v_POLY_param_shadow_intensity_val * 1.0 * 1.0 * 1.0 * 1.0 * 1.0);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mix2\n\tvec3 v_POLY_mix2_mix = mix(v_POLY_switch1_val, v_POLY_constant_white_val, 0.65);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/multAdd4\n\tfloat v_POLY_multAdd4_val = (v_POLY_twoWaySwitch2_val*(v_POLY_param_baseopacity_val + 0.0)) + 0.0;\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mult1\n\tvec3 v_POLY_mult1_product = (v_POLY_disk2_float * v_POLY_mix2_mix);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/max1\n\tfloat v_POLY_max1_val = max(v_POLY_disk2_float, v_POLY_mult3_product);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/complement1\n\tfloat v_POLY_complement1_val = complement(v_POLY_multAdd4_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/twoWaySwitch1\n\tvec3 v_POLY_twoWaySwitch1_val;\n\tif(v_POLY_compare2_val){\n\tv_POLY_twoWaySwitch1_val = v_POLY_mult1_product;\n\t} else {\n\tv_POLY_twoWaySwitch1_val = v_POLY_mult2_product;\n\t}\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/mix1\n\tfloat v_POLY_mix1_mix = mix(v_POLY_max1_val, 0.0, v_POLY_complement1_val);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/output1\n\tdiffuseColor.xyz = v_POLY_twoWaySwitch1_val;\n\tdiffuseColor.a = v_POLY_mix1_mix;\n\n\n\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t// Higher precision equivalent of gl_FragCoord.z. This assumes depthRange has been left to its default values.\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\n\t#endif\n\n}\n",
				"lights": false
			},
			"customDepthDOFMaterial": {
				"metadata": {
					"version": 4.5,
					"type": "Material",
					"generator": "Material.toJSON"
				},
				"uuid": "28C9FFD0-6E80-48E7-803A-B977C89E6FF4",
				"type": "ShaderMaterial",
				"depthFunc": 3,
				"depthTest": true,
				"depthWrite": true,
				"stencilWrite": false,
				"stencilWriteMask": 255,
				"stencilFunc": 519,
				"stencilRef": 0,
				"stencilFuncMask": 255,
				"stencilFail": 7680,
				"stencilZFail": 7680,
				"stencilZPass": 7680,
				"glslVersion": null,
				"uniforms": {
					"mNear": {
						"value": 0
					},
					"mFar": {
						"value": 10
					},
					"v_POLY_param_baseopacity_val": {
						"value": 0.5
					},
					"v_POLY_param_shadowcolor_val": {
						"type": "c",
						"value": 3355443
					},
					"v_POLY_param_pulsecolor_val": {
						"type": "c",
						"value": 65280
					},
					"v_POLY_param_radius_val": {
						"value": 0.62
					},
					"v_POLY_param_shadow_intensity_val": {
						"value": 0.24
					},
					"v_POLY_param_id_val": {
						"value": 0
					},
					"v_POLY_param_color_role0_val": {
						"type": "c",
						"value": 6693371
					},
					"v_POLY_param_color_role1_val": {
						"type": "c",
						"value": 14827610
					},
					"v_POLY_param_color_role2_val": {
						"type": "c",
						"value": 40444
					},
					"v_POLY_param_color_role3_val": {
						"type": "c",
						"value": 16610123
					},
					"v_POLY_param_color_role4_val": {
						"type": "c",
						"value": 16756278
					},
					"v_POLY_param_color_role5_val": {
						"type": "c",
						"value": 50389
					}
				},
				"vertexShader": "#include <common>\n\nvarying float vViewZDepth;\n\n// INSERT DEFINES\n\n\n\n// /MAT/mesh_basic_builder_pulse_shadow/globals1\nvarying vec2 v_POLY_globals1_uv;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute2\nvarying float varying_v_POLY_attribute2_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute2\nattribute float role;\n\n// /MAT/mesh_basic_builder_pulse_shadow/attribute1\nattribute float id;\n\n\n\n\n\n\n\nvoid main() {\n\n\t// INSERT BODY\n\n\n\n\t// /MAT/mesh_basic_builder_pulse_shadow/globals1\n\tv_POLY_globals1_uv = vec2(uv);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute2\n\tvarying_v_POLY_attribute2_val = float(role);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/attribute1\n\tvarying_v_POLY_attribute1_val = float(id);\n\t\n\t// /MAT/mesh_basic_builder_pulse_shadow/output1\n\tvec3 transformed = position;\n\tvec3 objectNormal = normal;\n\n\n\n\n\n\t#include <project_vertex>\n\n\tvViewZDepth = - mvPosition.z;\n}",
				"fragmentShader": "uniform float mNear;\nuniform float mFar;\n\nvarying float vViewZDepth;\n\nvoid main() {\n\n\tfloat color = 1.0 - smoothstep( mNear, mFar, vViewZDepth );\n\tgl_FragColor = vec4( vec3( color ), 1.0 );\n\n}\n",
				"lights": false
			}
		}
	}
}