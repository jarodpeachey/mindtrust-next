(window.webpackJsonp=window.webpackJsonp||[]).push([["SceneDataManifestImporter"],{318:function(t,o,e){"use strict";e.r(o),e.d(o,"SceneDataManifestImporter",(function(){return s}));class s{static async importSceneData(t){null==t.editorMode&&(t.editorMode=!1);const{manifest:o,urlPrefix:e}=t,s=Object.keys(o.nodes),n=[];for(let t of s){const s=`${e}/root/${t}.json?t=${o.nodes[t]}`;n.push(s)}const r=[`${e}/root.json?t=${o.root}`,`${e}/properties.json?t=${o.properties}`];if(t.editorMode){const t=Date.now();r.push(`${e}/ui.json?t=${t}`)}for(let t of n)r.push(t);const i=r.map(t=>fetch(t)),a=await Promise.all(i),c=[];for(let t of a)c.push(await t.json());const d={root:c[0],properties:c[1]};let p=2;t.editorMode&&(d.ui=c[2],p+=1);const l={},f=Object.keys(o.nodes);for(let t=0;t<f.length;t++){const o=f[t],e=c[t+p];l[o]=e}return this.assemble(d,f,l)}static async assemble(t,o,e){const s={root:t.root,properties:t.properties,ui:t.ui};for(let t=0;t<o.length;t++){const n=o[t],r=e[n];this.insert_child_data(s.root,n,r)}return s}static insert_child_data(t,o,e){const s=o.split("/");if(1==s.length)t.nodes||(t.nodes={}),t.nodes[o]=e;else{const o=s.shift(),n=s.join("/"),r=t.nodes[o];this.insert_child_data(r,n,e)}}}}}]);
//# sourceMappingURL=SceneDataManifestImporter.bundle.fda87c5a7877e101b399.js.map